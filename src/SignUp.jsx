import React, { useState } from 'react';
import "./App.css";
import firebase from './firebase.js';

function SignUp(props) {
  const handleButtonClick = (page) => {
    props.onButtonClick(page);
  };
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const handleSignUp = (event) => {
    event.preventDefault();
    if (name.trim() === '') {
      alert('Please enter your name');
      return;
    }
    if (email.trim() === '') {
      alert('Please enter your email');
      return;
    }
    if (password.trim() === '') {
      alert('Please enter your password');
      return;
    }

    // code for checking the already existing email

    firebase.ref('user').orderByChild('email').equalTo(email).once('value', function(snapshot) {
      if (snapshot.exists()) {
        alert('Email already exists');
        handleButtonClick('signup');
        setEmail('');
        setPassword('');
        return;
      } else {
        // creating a referece of push() method in order to get the unique key generated by push() method
        const newRef = firebase.ref('user').push();
        // storing the key
        const newKey = newRef.key;

        const newData = {
          name,
          email,
          role: 'Admin',
          workspace: newKey,
        };

        // creating the reference for the workspace
        const newRef2 = firebase.ref('workspace').push();

        // storing the data for the workspace
        const newWorkspaceData = {
          devices: ['device1'],
          name,
          users: [newKey],
        };
        newRef2.set(newWorkspaceData);

        // storing the user data in Firebase
        newRef.set(newData)
        .then(() => {
          alert('User created successfully!');
          handleButtonClick('options');
          setName('');
          setEmail('');
          setPassword('');
        })
        .catch((error) => {
          alert(`Error: ${error.message}`);
        });
      }
    });
  };

  return (
    <>
      <h1 id="sign_up_heading">Sign Up</h1>
      <p id="para_sign_up">Sign up for our service:</p>
      <div id="form_container">
        <form onSubmit={handleSignUp}>
          <input
            type="text"
            id="name"
            value={name}
            placeholder="Enter your full name.."
            autoComplete="off"
            onChange={(event) => setName(event.target.value)}
          />

          <br />
          <input
            type="email"
            id="email"
            value={email}
            placeholder="Enter your email.."
            autoComplete="off"
            onChange={(event) => setEmail(event.target.value)}
          />
          <br />
          <input
            type="password"
            id="password"
            value={password}
            placeholder="Enter your password.."
            autoComplete="off"
            onChange={(event) => setPassword(event.target.value)}
          />
          <br />
          <button type="submit" id="sign_up_page_btn">
            Sign up
          </button>
        </form>
        <button onClick={() => handleButtonClick('home')} id="sign_up_back_home_btn">
          Cancel
        </button>
      </div>
    </>
  );
};

export default SignUp;
